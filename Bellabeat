---
title: 'Case Study 2: Bellabeat'
author: "Farhan"
date: '2022-03-14'
output: html_document
---

## Install and load packages

```{r install packages}
install.packages("stringi")
install.packages("tidyverse")
install.packages("skimr")
install.packages("janitor")
install.packages("ggplot2")
install.packages("ggpubr")
```

```{r load packages}
library(stringi)
library(tidyverse)
library(skimr)
library(janitor)
library(ggplot2)
library(ggpubr)
```


## Upload CSV file to R

```{r upload csv file}
dailyactivity <- read_csv("dailyActivity_merged.csv")
heartrate <- read_csv("heartrate_seconds_merged.csv")
heartrate2 <- read_csv("4_dailyheartrate.csv")
sleep <- read_csv("sleepDay_merged.csv")
sleep2 <- read_csv("2_dailysleep.csv")
weightlog <- read_csv("weightLogInfo_merged.csv")
mergedfile <- read_csv("daily_activity_sleep_weightlog_heartrate_merged.csv")
activitysleep <- read_csv("activity_sleep.csv")
```


## View data

_daily activity:_
```{r view data with head()}
head(dailyactivity)
```
```{r view data with str()}
str(dailyactivity)
```
```{r view data with glimpse()}
glimpse(dailyactivity)
```
```{r view column names}
colnames(dailyactivity)
```

_heartrate:_
```{r view data with head()}
head(heartrate)
```
```{r view data with str()}
str(heartrate)
```
```{r view data with glimpse()}
glimpse(heartrate)
```
```{r view column names}
colnames(heartrate)
```

_sleep:_
```{r view data with head()}
head(sleep)
```
```{r view data with str()}
str(sleep)
```
```{r view data with glimpse()}
glimpse(sleep)
```
```{r view column names}
colnames(sleep)
```

_weightlog:_
```{r view data with head()}
head(weightlog)
```
```{r view data with str()}
str(weightlog)
```
```{r view data with glimpse()}
glimpse(weightlog)
```
```{r view column names}
colnames(weightlog)
```

_mergedfile:_
```{r view data with head()}
head(mergedfile)
```
```{r view data with str()}
str(mergedfile)
```
```{r view data with glimpse()}
glimpse(mergedfile)
```
```{r view column names}
colnames(mergedfile)
```


## Data cleaning

Identify duplicate data in Sleep file.
```{r identify duplicates}
duplicated(sleep)
sum(duplicated(sleep))
```

Remove duplicate data in Sleep file.
```{r remove duplicates}
sleep_cleaned <- unique(sleep)
view(sleep_cleaned)
```

Adding Day Of Week Column
```{r adding Day Of Week column}
mergedfile2 <- mergedfile
mergedfile2$DayOfWeek <- weekdays(mergedfile2$ActivityDate, abbreviate = TRUE)

heartrate3 <- heartrate2
heartrate3$DayOfWeek <- weekdays(heartrate2$Date_Formatted, abbreviate = TRUE)

sleep3 <- sleep2
sleep3$DayOfWeek <- weekdays(sleep2$SleepDate_Formatted, abbreviate = TRUE)
```

Reorder Day of Week
```{r Reorder Day of Week}
mergedfile3 <- mergedfile2 %>%
  select(DayOfWeek, TotalSteps, TotalDistance, VeryActiveDistance, ModeratelyActiveDistance, LightActiveDistance, SedentaryActiveDistance, VeryActiveMinutes,FairlyActiveMinutes,LightlyActiveMinutes,SedentaryMinutes,Calories) %>%
  mutate(DayOfWeek = factor(DayOfWeek, levels= c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")))

heartrate4 <- heartrate3 %>%
  select(DayOfWeek, Average_Value) %>%
  mutate(DayOfWeek = factor(DayOfWeek, levels= c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")))

sleep4 <- sleep3 %>%
  select(DayOfWeek, TotalMinutesAsleep, TotalTimeInBed) %>%
  mutate(DayOfWeek = factor(DayOfWeek, levels= c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")))
```

Adding "Minutes to Fall Asleep" Column
```{r Adding "Minutes to Fall Asleep" column}
sleep4$MinutesToFallAsleep <-with(sleep4,TotalTimeInBed - TotalMinutesAsleep)

mergedfile$MinutesToFallAsleep <-with(mergedfile,TotalTimeInBed - TotalMinutesAsleep)
```

Remove rows where "TotalMinutesAsleep" column is Null
```{r}
activitysleep_cleaned <- activitysleep[complete.cases(activitysleep[ , c('TotalMinutesAsleep')]), ] 
```

## Analyze: Summary statistics

Determine the number of unqiue values and the number of rows in the data frame by using n_distinct() and nrow() functions respectively.
```{r number of unique value}
n_distinct(dailyactivity$Id)
n_distinct(heartrate$Id)
n_distinct(sleep_cleaned$Id)
n_distinct(weightlog$Id)
n_distinct(mergedfile$Id)
```

```{r number of rows}
nrow(dailyactivity)
nrow(heartrate)
nrow(sleep_cleaned)
nrow(weightlog)
nrow(mergedfile)
```

The heart rate and weight log data frames consist of 14 and 8 unique Ids respectively, which indicates a very low number of participants. Therefore, using the data frames individually will not be able to provide reliable recommendations.

_daily activity:_
```{r summary of daily activity}
dailyactivity %>%  
  select(TotalSteps,
         TotalDistance,            
         VeryActiveMinutes,        
         FairlyActiveMinutes,     
         LightlyActiveMinutes,    
         SedentaryMinutes,         
         Calories) %>%
  summary()
```

**Findings:**
- Average user took 7,638 steps a day, which is below Centers for Disease Control and Prevention (CDC) recommendation of 10,000 steps a day (CDC, n.d.).

- Average user spent 21.16 minutes a day doing very active activity. This equates to 148.12 minutes of very active activity per week, exceeded CDC's recommendation of 75 minutes per week (CDC, 2020). This suggests participants have a very active lifestyle.

- Average user spent 13.56 minutes a day doing moderately active activity, which equates to 94.92 minutes per week. This is below CDC's recommendation of 150 minutes per week (CDC, 2020). However, the shortage of minutes was probably compensated in the very active activity. 

- Average user spent 192.8 minutes or 3.21 hours a day doing light activity.

- Average user spent 991.2 minutes or 16.53 hours of sedentary time a day. This is a significant amount of time and this will have a dentrimental effect on health. Even if sedentary time cannot be reduced for unavoidable reasons, studies have found that engaging in sufficient exercise equivalent to or more than 150 to 300 minutes of moderately active activities per week could offset the adverse effects of sedentary behaviour (Park et al., 20200).

- Average user burned 2,304 calories a day. Studies found that the average person burns around 1,800 calories a day doing absolutely nothing (Walsh, 2022). This suggests average users are burning 504 calories worth of exercise each day.

_heartrate:_
```{r summary of heart rate}
heartrate %>%  
  select(Value) %>%
  summary()
```

**Findings:**
- Despite the low sample size of 14 participants, the average user's heart rate is 77 beats per minute (bpm), which falls between a normal resting heart rate for adults, ranges from 60 to 100 bpm according to the American Heart Association (AHA) (AHA, 2015). Generally, a lower heart rate at rest implies more efficient heart function and better cardiovascular fitness (Laskowski, 2020).

_sleep:_
```{r summary of sleep}
sleep_cleaned %>%  
  select(TotalSleepRecords,  
         TotalMinutesAsleep,
         TotalTimeInBed) %>%
  summary()
```

**Findings:**
- Average user slept around 419.2 minutes or 7 hours per day, which met CDC's sleep recommendations for adults (CDC, 2017).

- Average user spent 458.5 minutes or 7.64 hours in bed. This suggests average users spent 39.3 minutes awake in bed, before falling asleep.

_weightlog:_
```{r summary of sleep}
weightlog %>%  
  select(WeightKg,
         Fat,
         BMI) %>%
  summary()
```

**Findings:**
- Average user's weight is 72kg with a BMI of 25.19, which falls within the overweight range of 25.0 to 29.9. A healthy BMI range falls within 18.5 to 24.9 (CDC, 2020). However, as the sample size for weight log data consists of only 8 participants, the finding is deemed as unreliable due to insufficient sample size to represent the population.


## Share: Visualization

Figure 1: Average Total Steps per Day
```{r}
Average_Total_Steps <- mergedfile3 %>%
  group_by(DayOfWeek) %>%
  summarize(Average_Total_Steps =round(mean(TotalSteps), digits=0))

ggplot(Average_Total_Steps, aes(x = DayOfWeek, y = Average_Total_Steps)) +
  geom_col() +
  geom_text(aes(label = Average_Total_Steps), vjust = 1.5, colour = "white") +
  labs(title="Average Total Steps per Day")
```
Figure 1 shows that the users did not achieve CDC's recommended 10,000 steps per day. Sunday was observed to have the least number of steps of 6,933 steps, and Saturday was observed to have the highest number of steps of 8,153 steps. Weekdays shows a consistent number of steps ranging from 7,406 steps to 8,125 steps. 

Figure 2: Average Calories Burned per Day
```{r}
Average_Calories <- mergedfile3 %>%
  group_by(DayOfWeek) %>%
  summarize(Calories_Burned =round(mean(Calories), digits=0))

ggplot(Average_Calories, aes(x = DayOfWeek, y = Calories_Burned)) +
  geom_col() +
  geom_text(aes(label = Calories_Burned), vjust = 1.5, colour = "white") +
  labs(title="Average Calories Burned per Day")
```
Figure 2 dislplays users are burning their calories at a consistent amount throughout the week, ranging from 2,200 to 2,356 calories.

Figure 3: Average of Activity Minutes per Day
```{r}
AveMins <- mergedfile3 %>%
  group_by(DayOfWeek) %>%
  summarize(Very_Active=round(mean(VeryActiveMinutes), digits=0),
            Fairly_Active=round(mean(FairlyActiveMinutes), digits=0),
            Lightly_Active=round(mean(LightlyActiveMinutes), digits=0))

Long_AveMins <- AveMins %>%
  pivot_longer(cols = -DayOfWeek, names_to = "Activity", values_to = "Minutes") %>%
  select(DayOfWeek, Activity, Minutes) %>%
  mutate(Activity = factor(Activity, levels= c("Very_Active", "Fairly_Active", "Lightly_Active")))

Long_AveMins %>% 
  ggplot(aes(x = DayOfWeek, y = Minutes, fill = Activity)) + 
  geom_col(position = "dodge") +
  geom_text(aes(label = Minutes), vjust = 1.5, colour = "white", size=3, position=position_dodge(.9)) +
  labs(title="Average of Activity Minutes per Day")
```
Figure 3 shows a comparison of minutes spent on each activity per day throughout the week. Users spent more time doing very active activity compared to fairly active activity, 148 minutes, more than CDC's recommendation of 75 minutes of very active activity per week (CDC, 2020). This suggest users lead a very active lifestyle and have a strong interest in vigorous activities.

Figure 4: Average Sedentary Minutes per Day
```{r}
AveSMins <- mergedfile3 %>%
  group_by(DayOfWeek) %>%
  summarize(Sedentary_Minutes =round(mean(SedentaryMinutes), digits=0))

ggplot(AveSMins, aes(x = DayOfWeek, y = Sedentary_Minutes)) +
  geom_col() +
  geom_text(aes(label = Sedentary_Minutes), vjust = 1.5, colour = "white") +
  labs(title="Average of Sedentary Minutes per Day")
```
Figure 4 depicts the sedentary minutes user spent per day throughout the week. The chart shows users spent lesser sedentary minutes on weekends as compared to weekdays. This suggest users were probably at work, and that contributed to the high sedentary minutes on the weekdays.

Figure 5: Percentage of Time Spent in Different Levels of Activity
```{r}
AveMinsPie <- mergedfile2 %>%
  summarize(Very_Active=round(mean(VeryActiveMinutes), digits=0),
            Fairly_Active=round(mean(FairlyActiveMinutes), digits=0),
            Lightly_Active=round(mean(LightlyActiveMinutes), digits=0),
            Sedentary=round(mean(SedentaryMinutes), digits=0)
            )

Long_AveMinsPie <- pivot_longer(AveMinsPie, cols=everything())

Long_AveMinsPie2 <- plyr::rename(Long_AveMinsPie, c("name" = "Activity",
                                                    "value" = "Minutes"))
  
# Calculate percentages
pct <- round(100*Long_AveMinsPie2$Minutes/1440)
# Draw pie chart
pie(Long_AveMinsPie2$Minutes,
    labels = paste(Long_AveMinsPie2$Activity, sep = " ", pct, "%"), 
    col = rainbow(length(Long_AveMinsPie2$Activity)), 
    main = "Percentage of Time Spent in Different Levels of Activity Daily")
```
Figure 5 shows that users spent 81% of their time daily on sedentary activity.

Figure 6: Average Heart Rate per Day
```{r}
AveHR <- heartrate4 %>%
  group_by(DayOfWeek) %>%
  summarize(Average_Heart_Rate =round(mean(Average_Value), digits=0))

ggplot(AveHR, aes(x = DayOfWeek, y = Average_Heart_Rate)) +
  geom_col() +
  geom_text(aes(label = Average_Heart_Rate), vjust = 1.5, colour = "white") +
  labs(title="Average Heart Rate per Day")
```
Figure 6 shows that users maintained a consistent heart rate, ranging from 77 to 81 bpm, throughtout the week. Users tend to have a higher heart rate on Saturdays.

Figure 7: Average Minutes Asleep per Day
```{r}
AveSleep <- sleep4 %>%
  group_by(DayOfWeek) %>%
  summarize(Minutes_Asleep =round(mean(TotalMinutesAsleep), digits=0))

ggplot(AveSleep, aes(x = DayOfWeek, y = Minutes_Asleep)) +
  geom_col() +
  geom_text(aes(label = Minutes_Asleep), vjust = 1.5, colour = "white") +
  labs(title="Average Minutes Asleep per Day")
```
Figure 7 shows users tend to sleep least on Thursday with 401 minutes (6 hours 41 minutes) of sleep, and sleep most on Sundays with 453 minutes (7 hours 33 minutes) of sleep. This suggests that users tend to sleep earlier on Sundays as the following day could be a working day.

Figure 8: Average Minutes to Fall Asleep per Day
```{r}
MinsToSleep <- sleep4 %>%
  group_by(DayOfWeek) %>%
  summarize(Minutes_To_Fall_Asleep =round(mean(MinutesToFallAsleep), digits=0))

ggplot(MinsToSleep, aes(x = DayOfWeek, y = Minutes_To_Fall_Asleep)) +
  geom_col() +
  geom_text(aes(label = Minutes_To_Fall_Asleep), vjust = 1.5, colour = "white") +
  labs(title="Average Minutes to Fall Asleep per Day")
```
Figure 8 shows that users spent the longest time, 51 minutes, to fall asleep on Sundays.

Figure 9.1: Relationship between Calories Burned & Total Steps
```{r}
ggplot(mergedfile, aes(x=TotalSteps, y=Calories)) +
   geom_point() +
   theme_minimal() +
   xlab("Total Steps") +
   ylab("Calories") +    
   geom_smooth(method = lm) +
  stat_cor(method = "spearman", label.x = 25000, label.y = 2300) +
  stat_cor(aes(label=..rr.label..), label.x=25000, label.y=2000) +
  labs(title="Relationship between Calories Burned & Total Steps")
```

Figure 9.2: Residual Plots of Calories Burned & Total Steps
```{r}
# Residual Plots
CalStepsRegression <- lm(Calories ~ TotalSteps, data = mergedfile)
plot(residuals(CalStepsRegression) ~ TotalSteps, data = mergedfile)
abline(h=0)
```

Figure 9.1 shows that the calories burned and total steps has a positive correlation coefficient of 0.56, and the strength of correlation is moderate. However, the coefficient of determination is 0.35, which is generally considered a weak or low effect size (Moore et al., 2013). Despite the low coefficient of determination, the quality of the coefficient depends on several factors, and it is not always the case that a high r-squared is good for the regression model. Therefore, the insights from the statistical metric can vary (Corporate Finance Institute, 2021). Figure 9.1 also indicates the p-value is 2.2e-16, which is statistically significant as the p-value is lower than the usual significance level of 0.05. This signifies there is sufficient evidence to conclude that there is an effect at the population level (Frost, 2019).

Figure 9.2 depicts that the residuals are random in regression analysis as the data are randomly scattered around zero for the entire range of fitted values. When the residuals center on zero, they indicate that the model’s predictions are correct on average rather than systematically too high or low (Frost, 2019). This suggets the estimates are unbiased.

Figure 10.1: Relationship between Calories Burned & Very Active Minutes
```{r data visualization}
ggplot(mergedfile, aes(x=VeryActiveMinutes, y=Calories)) +
   geom_point() +
   theme_minimal() +
   xlab("Very Active Minutes") +
   ylab("Calories") +    
   geom_smooth(method = lm) +
  stat_cor(method = "spearman", label.x = 100, label.y = 2300) +
  stat_cor(aes(label=..rr.label..), label.x=100, label.y=2000) +
  labs(title="Relationship between Calories Burned & Very Active Minutes")
```

Figure 10.2: Residual Plots of Calories Burned & Very Active Minutes
```{r}
# Residual Plots
CalVAMinsRegression <- lm(Calories ~ VeryActiveMinutes, data = mergedfile)
plot(residuals(CalVAMinsRegression) ~ VeryActiveMinutes, data = mergedfile)
abline(h=0)
```
 
Figure 11.1: Relationship between Calories Burned & Fairly Active Minutes
```{r data visualization}
ggplot(mergedfile, aes(x=FairlyActiveMinutes, y=Calories)) +
   geom_point() +
   theme_minimal() +
   xlab("Fairly Active Minutes") +
   ylab("Calories") +    
   geom_smooth(method = lm) +
  stat_cor(method = "spearman", label.x = 100, label.y = 2300) +
  stat_cor(aes(label=..rr.label..), label.x=100, label.y=2000) +
  labs(title="Relationship between Calories Burned & Fairly Active Minutes")
```

Figure 11.2: Residual Plots of Calories Burned & Fairly Active Minutes
```{r}
# Residual Plots
CalFAMinsRegression <- lm(Calories ~ FairlyActiveMinutes, data = mergedfile)
plot(residuals(CalFAMinsRegression) ~ FairlyActiveMinutes, data = mergedfile)
abline(h=0)
```

Figure 12.1: Relationship between Calories Burned & Lightly Active Minutes
```{r data visualization}
ggplot(mergedfile, aes(x=LightlyActiveMinutes, y=Calories)) +
   geom_point() +
   theme_minimal() +
   xlab("Lightly Active Minutes") +
   ylab("Calories") +    
   geom_smooth(method = lm) +
  stat_cor(method = "spearman", label.x = 300, label.y = 1000) +
  stat_cor(aes(label=..rr.label..), label.x=300, label.y=700) +
  labs(title="Relationship between Calories Burned & Lightly Active Minutes")
```

Figure 12.2: Residual Plots of Calories Burned & Lightly Active Minutes
```{r}
# Residual Plots
CalLAMinsRegression <- lm(Calories ~ LightlyActiveMinutes, data = mergedfile)
plot(residuals(CalLAMinsRegression) ~ LightlyActiveMinutes, data = mergedfile)
abline(h=0)
```

Figure 13.1: Relationship between Calories Burned & Sedentary Minutes
```{r data visualization}
ggplot(mergedfile, aes(x=SedentaryMinutes, y=Calories)) +
   geom_point() +
   theme_minimal() +
   xlab("Sedentary Minutes") +
   ylab("Calories") +    
   geom_smooth(method = lm) +
  stat_cor(method = "spearman", label.x = 1050, label.y = 900) +
  stat_cor(aes(label=..rr.label..), label.x=1050, label.y=600) +
  labs(title="Relationship between Calories Burned & Sedentary Minutes")
```

Figure 13.2: Residual Plots of Calories Burned & Sedentary Minutes
```{r}
# Residual Plots
CalSMinsRegression <- lm(Calories ~ SedentaryMinutes, data = mergedfile)
plot(residuals(CalSMinsRegression) ~ SedentaryMinutes, data = mergedfile)
abline(h=0)
```

Comment for Calories & Total Steps/Activities





Figure 14.1: Relationship between Minutes Asleep & Calories Burned
```{r data visualization}
ggplot(activitysleep_cleaned, aes(x=Calories, y=TotalMinutesAsleep)) +
   geom_point() +
   theme_minimal() +
   xlab("Calories Burned") +
   ylab("Minutes Asleep") +    
   geom_smooth(method = lm) +
  stat_cor(method = "spearman", label.x = 3900, label.y = 320) +
  stat_cor(aes(label=..rr.label..), label.x=3900, label.y=290) +
  labs(title="Relationship between Minutes Asleep & Calories Burned")
```

Figure 14.2: Residual Plots of Minutes Asleep & Calories Burned
```{r}
# Residual Plots
SleepCalRegression <- lm(TotalMinutesAsleep ~ Calories, data = activitysleep_cleaned)
plot(residuals(SleepCalRegression) ~ Calories, data = activitysleep_cleaned)
abline(h=0)
```

Figure 15.1: Relationship between Minutes Asleep & Total Steps
```{r data visualization}
ggplot(activitysleep_cleaned, aes(x=TotalSteps, y=TotalMinutesAsleep)) +
   geom_point() +
   theme_minimal() +
   xlab("Total Steps") +
   ylab("Minutes Asleep") +    
   geom_smooth(method = lm) +
  stat_cor(method = "spearman", label.x = 17000, label.y = 280) +
  stat_cor(aes(label=..rr.label..), label.x=17000, label.y=240) +
  labs(title="Relationship between Minutes Asleep & Total Steps")
```

Figure 15.2: Residual Plots of Minutes Asleep & Total Steps
```{r}
# Residual Plots
SleepStepsRegression <- lm(TotalMinutesAsleep ~ TotalSteps, data = activitysleep_cleaned)
plot(residuals(SleepStepsRegression) ~ TotalSteps, data = activitysleep_cleaned)
abline(h=0)
```

Figure 16.1: Relationship between Minutes Asleep & Very Active Minutes
```{r data visualization}
ggplot(activitysleep_cleaned, aes(x=VeryActiveMinutes, y=TotalMinutesAsleep)) +
   geom_point() +
   theme_minimal() +
   xlab("Very Active Minutes") +
   ylab("Minutes Asleep") +    
   geom_smooth(method = lm) +
  stat_cor(method = "spearman", label.x = 150, label.y = 290) +
  stat_cor(aes(label=..rr.label..), label.x=150, label.y=250) +
  labs(title="Relationship between Minutes Asleep & Very Active Minutes")
```

Figure 16.2: Residual Plots of Minutes Asleep & Very Active Minutes
```{r}
# Residual Plots
SleepVAMinsRegression <- lm(TotalMinutesAsleep ~ VeryActiveMinutes, data = activitysleep_cleaned)
plot(residuals(SleepVAMinsRegression) ~ VeryActiveMinutes, data = activitysleep_cleaned)
abline(h=0)
```

Figure 17.1: Relationship between Minutes Asleep & Fairly Active Minutes
```{r data visualization}
ggplot(activitysleep_cleaned, aes(x=FairlyActiveMinutes, y=TotalMinutesAsleep)) +
   geom_point() +
   theme_minimal() +
   xlab("Fairly Active Minutes") +
   ylab("Minutes Asleep") +    
   geom_smooth(method = lm) +
  stat_cor(method = "spearman", label.x = 110, label.y = 140) +
  stat_cor(aes(label=..rr.label..), label.x=110, label.y=90) +
  labs(title="Relationship between Minutes Asleep & Fairly Active Minutes")
```

Figure 17.2: Residual Plots of Minutes Asleep & Fairly Active Minutes
```{r}
# Residual Plots
SleepFAMinsRegression <- lm(TotalMinutesAsleep ~ FairlyActiveMinutes, data = activitysleep_cleaned)
plot(residuals(SleepFAMinsRegression) ~ FairlyActiveMinutes, data = activitysleep_cleaned)
abline(h=0)
```

Figure 18.1: Relationship between Minutes Asleep & Lightly Active Minutes
```{r data visualization}
ggplot(activitysleep_cleaned, aes(x=LightlyActiveMinutes, y=TotalMinutesAsleep)) +
   geom_point() +
   theme_minimal() +
   xlab("Lightly Active Minutes") +
   ylab("Minutes Asleep") +    
   geom_smooth(method = lm) +
  stat_cor(method = "spearman", label.x = 400, label.y = 320) +
  stat_cor(aes(label=..rr.label..), label.x=400, label.y=280) +
  labs(title="Relationship between Minutes Asleep & Lightly Active Minutes")
```

Figure 18.2: Residual Plots of Minutes Asleep & Lightly Active Minutes
```{r}
# Residual Plots
SleepLAMinsRegression <- lm(TotalMinutesAsleep ~ LightlyActiveMinutes, data = activitysleep_cleaned)
plot(residuals(SleepLAMinsRegression) ~ LightlyActiveMinutes, data = activitysleep_cleaned)
abline(h=0)
```

Figure 19.1: Relationship between Minutes Asleep & Sedentary Minutes
```{r data visualization}
ggplot(activitysleep_cleaned, aes(x=SedentaryMinutes, y=TotalMinutesAsleep)) +
   geom_point() +
   theme_minimal() +
   xlab("Sedentary Minutes") +
   ylab("Minutes Asleep") +    
   geom_smooth(method = lm) +
  stat_cor(method = "spearman", label.x = 250, label.y = 210) +
  stat_cor(aes(label=..rr.label..), label.x=250, label.y=170) +
  labs(title="Relationship between Minutes Asleep & Sedentary Minutes")
```

Figure 19.2: Residual Plots of Minutes Asleep & Sedentary Minutes
```{r}
# Residual Plots
SleepSMinsRegression <- lm(TotalMinutesAsleep ~ SedentaryMinutes, data = activitysleep_cleaned)
plot(residuals(SleepSMinsRegression) ~ SedentaryMinutes, data = activitysleep_cleaned)
abline(h=0)
```

Comment for Minutes Asleep & Calories/Total Steps/Activities


Figure 20.1: Relationship between Minutes Awake Before Asleep & Calories Burned
```{r data visualization}
ggplot(activitysleep_cleaned, aes(x=Calories, y=MinutesAwakeBeforeAsleep)) +
   geom_point() +
   theme_minimal() +
   xlab("Calories Burned") +
   ylab("Minutes Awake Before Asleep") +    
   geom_smooth(method = lm) +
  stat_cor(method = "spearman", label.x = 3500, label.y = 130) +
  stat_cor(aes(label=..rr.label..), label.x=3500, label.y=110) +
  labs(title="Relationship between Minutes Awake Before Asleep & Calories Burned")
```

Figure 20.2: Residual Plots of Minutes Awake Before Asleep & Calories Burned
```{r}
# Residual Plots
AwakeCalRegression <- lm(MinutesAwakeBeforeAsleep ~ Calories, data = activitysleep_cleaned)
plot(residuals(AwakeCalRegression) ~ Calories, data = activitysleep_cleaned)
abline(h=0)
```

Figure 21.1: Relationship between Minutes Awake Before Asleep & Total Steps
```{r data visualization}
ggplot(activitysleep_cleaned, aes(x=TotalSteps, y=MinutesAwakeBeforeAsleep)) +
   geom_point() +
   theme_minimal() +
   xlab("Total Steps") +
   ylab("Minutes Awake Before Asleep") +    
   geom_smooth(method = lm) +
  stat_cor(method = "spearman", label.x = 18000, label.y = 110) +
  stat_cor(aes(label=..rr.label..), label.x=18000, label.y=80) +
  labs(title="Relationship between Minutes Awake Before Asleep & Total Steps")
```

Figure 21.2: Residual Plots of Minutes Awake Before Asleep & Total Steps
```{r}
# Residual Plots
AwakeStepsRegression <- lm(MinutesAwakeBeforeAsleep ~ TotalSteps, data = activitysleep_cleaned)
plot(residuals(AwakeStepsRegression) ~ TotalSteps, data = activitysleep_cleaned)
abline(h=0)
```

Figure 22.1: Relationship between Minutes Awake Before Asleep & Very Active Minutes
```{r data visualization}
ggplot(activitysleep_cleaned, aes(x=VeryActiveMinutes, y=MinutesAwakeBeforeAsleep)) +
   geom_point() +
   theme_minimal() +
   xlab("Very Active Minutes") +
   ylab("Minutes Awake Before Asleep") +    
   geom_smooth(method = lm) +
  stat_cor(method = "spearman", label.x = 150, label.y = 110) +
  stat_cor(aes(label=..rr.label..), label.x=150, label.y=80) +
  labs(title="Relationship between Minutes Awake Before Asleep & Very Active Minutes")
```

Figure 22.2: Residual Plots of Minutes Awake Before Asleep & Very Active Minutes
```{r}
# Residual Plots
AwakeVAMinsRegression <- lm(MinutesAwakeBeforeAsleep ~ VeryActiveMinutes, data = activitysleep_cleaned)
plot(residuals(AwakeVAMinsRegression) ~ VeryActiveMinutes, data = activitysleep_cleaned)
abline(h=0)
```

Figure 23.1: Relationship between Minutes Awake Before Asleep & Fairly Active Minutes
```{r data visualization}
ggplot(activitysleep_cleaned, aes(x=FairlyActiveMinutes, y=MinutesAwakeBeforeAsleep)) +
   geom_point() +
   theme_minimal() +
   xlab("Fairly Active Minutes") +
   ylab("Minutes Awake Before Asleep") +    
   geom_smooth(method = lm) +
  stat_cor(method = "spearman", label.x = 110, label.y = 70) +
  stat_cor(aes(label=..rr.label..), label.x=110, label.y=50) +
  labs(title="Relationship between Minutes Awake Before Asleep & Fairly Active Minutes")
```

Figure 23.2: Residual Plots of Minutes Awake Before Asleep & Fairly Active Minutes
```{r}
# Residual Plots
AwakeFAMinsRegression <- lm(MinutesAwakeBeforeAsleep ~ FairlyActiveMinutes, data = activitysleep_cleaned)
plot(residuals(AwakeFAMinsRegression) ~ FairlyActiveMinutes, data = activitysleep_cleaned)
abline(h=0)
```

Figure 24.1: Relationship between Minutes Awake Before Asleep & Lightly Active Minutes
```{r data visualization}
ggplot(activitysleep_cleaned, aes(x=LightlyActiveMinutes, y=MinutesAwakeBeforeAsleep)) +
   geom_point() +
   theme_minimal() +
   xlab("Lightly Active Minutes") +
   ylab("Minutes Awake Before Asleep") +    
   geom_smooth(method = lm) +
  stat_cor(method = "spearman", label.x = 400, label.y = 110) +
  stat_cor(aes(label=..rr.label..), label.x=400, label.y=90) +
  labs(title="Relationship between Minutes Awake Before Asleep & Lightly Active Minutes")
```

Figure 24.2: Residual Plots of Minutes Awake Before Asleep & Lightly Active Minutes
```{r}
# Residual Plots
AwakeLAMinsRegression <- lm(MinutesAwakeBeforeAsleep ~ LightlyActiveMinutes, data = activitysleep_cleaned)
plot(residuals(AwakeLAMinsRegression) ~ LightlyActiveMinutes, data = activitysleep_cleaned)
abline(h=0)
```

Figure 25.1: Relationship between Minutes Awake Before Asleep & Sedentary Minutes
```{r data visualization}
ggplot(activitysleep_cleaned, aes(x=SedentaryMinutes, y=MinutesAwakeBeforeAsleep)) +
   geom_point() +
   theme_minimal() +
   xlab("Sedentary Minutes") +
   ylab("Minutes Awake Before Asleep") +    
   geom_smooth(method = lm) +
  stat_cor(method = "spearman", label.x = 900, label.y = 110) +
  stat_cor(aes(label=..rr.label..), label.x=900, label.y=90) +
  labs(title="Relationship between Minutes Awake Before Asleep & Sedentary Minutes")
```

Figure 25.2: Residual Plots of Minutes Awake Before Asleep & Sedentary Minutes
```{r}
# Residual Plots
AwakeSMinsRegression <- lm(MinutesAwakeBeforeAsleep ~ SedentaryMinutes, data = activitysleep_cleaned)
plot(residuals(AwakeSMinsRegression) ~ SedentaryMinutes, data = activitysleep_cleaned)
abline(h=0)
```

Comment for Minutes Awake Before Asleep & Calories/Total Steps/Activities




## Act: Recommendations

**Recommendations**
1. Bellabeat could explore methods to increase data collection in regards to heart rate, sleep pattern and weight log as there were low number of participants. .....

2. The fact that users spent more time on very active activity than moderately and light activities suggests that the users have strong interest in doing vigorous activities. Company could market product's durability, comfort, functionality and features tailored to the vigorous activities such as running, jogging, swimming continous laps, playing sports or skipping with a rope.

3. Average user spent 991.2 minutes or 16.53 hours of sedentary time a day....

4. This suggests average users are burning 504 calories worth of exercise each day.

5. Average user slept around 419.2 minutes or 7 hours per day,

6. As the average users took around 39.3 minutes to fall asleep, studies suggest if someone cannot fall asleep within 15 to 20 minutes, the person should leave his or her bed. The person should engage in relaxing activities like read a boring book, stretch or breath slowly, allowing tension to dissipate, while waiting for sleepiness to come. The activities should not be stimulating or rewarding, like watching television or computers (Peters, 2020). Bellabeat product.....

7. We can assume users did not move as much on Sundays, and will need extra reminder and motivation. Bellabeat could also set reminders and motivation every 2 to 3 hours if users is not on track to fulfil 10,000 steps per day. Content, info sharing......

8. As users spents more sedentary minutes on weekdays, product could....


## References

American Heart Association. (2015, July 31). All About Heart Rate (Pulse). https://www.heart.org/en/health-topics/high-blood-pressure/the-facts-about-high-blood-pressure/all-about-heart-rate-pulse

Centers for Disease Control and Prevention. (n.d.). Lifestyle Coach Facilitation Guide: Post-Core. https://www.cdc.gov/diabetes/prevention/pdf/postcurriculum_session8.pdf

Centers for Disease Control and Prevention. (2017, March 2). How Much Sleep Do I Need? - Sleep and Sleep Disorders. https://www.cdc.gov/sleep/about_sleep/how_much_sleep.html

Centers for Disease Control and Prevention. (2020, September 17). Assessing Your Weight. https://www.cdc.gov/healthyweight/assessing/index.html

Centers for Disease Control and Prevention. (2020, October 7). How much physical activity do adults need? https://www.cdc.gov/physicalactivity/basics/adults/index.htm

Corporate Finance Institute. (2021, July 28). Coefficient of Determination. https://corporatefinanceinstitute.com/resources/knowledge/other/coefficient-of-determination/

Frost, J. (2019, March 15). Check Your Residual Plots to Ensure Trustworthy Regression Results! Statistics By Jim. https://statisticsbyjim.com/regression/check-residual-plots-regression-analysis/

Laskowski, E. R. (2020, October 2). Heart rate: What’s normal? Mayo Clinic. https://www.mayoclinic.org/healthy-lifestyle/fitness/expert-answers/heart-rate/faq-20057979?reDate=15032022

Moore, D. S., Notz, W. I, & Flinger, M. A. (2013). The basic practice of statistics (6th ed.). New York, NY: W. H. Freeman and Company. Page (138).

Park J. H., Moon J. H., Kim H. J., Kong M. H., Oh Y. H. (2020). Sedentary lifestyle: overview of updated evidence of potential health risks. Korean J. Fam. Med. 41 365–373. 10.4082/KJFM.20.0165

Peters, B. (2020, August 13). Improve Insomnia by Avoiding Time Spent Lying Awake in Bed at Night. Verywell Health. https://www.verywellhealth.com/30-days-to-better-sleep-dont-lie-awake-in-bed-at-night-3969250

Walsh, G. (2022, January 4). How many calories do I burn a day- and how many calories do I need to lose weight? GoodtoKnow. https://www.goodto.com/wellbeing/diets-exercise/what-is-calorie-how-many-lose-weigt-425557
